-- 

-- Если не использовать процедуры а делать всё в один запрос - то мне представляется рабочим вариант с 
-- вставкой данных из другого запроса. В этом случае задача меняется на "как получить миллион записей одним запросом"
-- Не знаю в том ли направлении думаю, но наиболее "плодовитый" в этом случае будет наверное объединение CROSS JOIN..
-- Таким образом если объединять тестовую таблицу саму с собой несколько раз - довольно быстро можно дойти и до миллиона и более записей.
-- Возьмем таблицу users

SELECT * FROM users;
-- +----+--------------------+-------------+---------------------+---------------------+
-- | id | name               | birthday_at | created_at          | updated_at          |
-- +----+--------------------+-------------+---------------------+---------------------+
-- |  1 | Геннадий           | 1990-10-05  | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  2 | Наталья            | 1984-11-12  | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  3 | Александр          | 1985-05-20  | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  4 | Сергей             | 1988-02-14  | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  5 | Иван               | 1998-01-12  | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  6 | Мария              | 1992-08-29  | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- +----+--------------------+-------------+---------------------+---------------------+
-- 6 rows in set (0.00 sec)

-- При CROSS JOIN-е таблицы из 10 записей всего 6 раз получаем 10 в 6 степени = 1 000 000
-- Сделаем вспомогательную таблицу temp_users 
-- (не получилось сделать ее TEMPORARY - запрос с CROSS JOIN-ами не работал на ней)

CREATE TABLE temp_users ( 
	id SERIAL, 
	name VARCHAR(255),  
	birthday_at DATETIME, 
	created_at DATETIME, 
	updated_at DATETIME) 
ENGINE=memory;

-- Перенесем туда имеющиеся записи из users

INSERT INTO temp_users 
	SELECT 
		NULL, name, birthday_at, created_at, updated_at 
	FROM users;

-- И доведем количество записей до 10

INSERT INTO users 
	SELECT 
		NULL, name, birthday_at, created_at, updated_at  
	FROM users LIMIT 4;

-- mysql> SELECT * FROM temp_users;
-- +----+--------------------+---------------------+---------------------+---------------------+
-- | id | name               | birthday_at         | created_at          | updated_at          |
-- +----+--------------------+---------------------+---------------------+---------------------+
-- |  1 | Геннадий           | 1990-10-05 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  2 | Наталья            | 1984-11-12 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  3 | Александр          | 1985-05-20 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  4 | Сергей             | 1988-02-14 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  5 | Иван               | 1998-01-12 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  6 | Мария              | 1992-08-29 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  7 | Геннадий           | 1990-10-05 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  8 | Наталья            | 1984-11-12 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- |  9 | Александр          | 1985-05-20 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- | 10 | Сергей             | 1988-02-14 00:00:00 | 2019-09-06 16:02:46 | 2019-09-06 16:02:46 |
-- +----+--------------------+---------------------+---------------------+---------------------+
-- 10 rows in set (0.00 sec)

-- Теперь можем добавлять миллион.....

INSERT INTO users 
	SELECT 
		NULL, a.name, a.birthday_at, a.created_at, a.updated_at 
	FROM temp_users as a
	CROSS JOIN temp_users as b
	CROSS JOIN temp_users as c
	CROSS JOIN temp_users as d
	CROSS JOIN temp_users as e
	CROSS JOIN temp_users as f;

-- Query OK, 1000000 rows affected (38.50 sec)
-- Records: 1000000  Duplicates: 0  Warnings: 0

-- 40 секунд! немало... Хотя наверное сильно зависит от машины и дисковой подсистемы.

SELECT COUNT(*) as count FROM users;
-- +---------+
-- | count   |
-- +---------+
-- | 1000006 |
-- +---------+
-- 1 row in set (0.13 sec)

-- Селект с выводом записей делать не стал... слишком долго ждать вывода.
